[main]
jdbcRealm=org.apache.shiro.realm.jdbc.JdbcRealm

# If not filled, subclasses of JdbcRealm assume "select password from users where username = ?"
jdbcRealm.authenticationQuery = select passwd from users where login = ?
# If not filled, subclasses of JdbcRealm assume "select role_name from user_roles where username = ?"
jdbcRealm.userRolesQuery = select roles.role_name from roles inner join userinrolesmr on userinrolesmr.idrole = roles.idroles inner join users on users.idusers = userinrolesmr.iduser  where users.login = ?

roles = org.apache.shiro.authc.credential.RolesAnyAuthorizationFilter
authc = org.apache.shiro.web.filter.authc.FormAuthenticationFilter
logout = org.apache.shiro.web.filter.authc.LogoutFilter

securityManager.realms = $jdbcRealm
cacheManager = org.apache.shiro.cache.ehcache.EhCacheManager
securityManager.cacheManager = $cacheManager
sessionManager = org.apache.shiro.web.session.mgt.DefaultWebSessionManager
securityManager.sessionManager = $sessionManager

#passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
# this fix will be integrated in the 1.3 version of shiro
passwordMatcher = org.apache.shiro.authc.credential.TempFixPasswordMatcher
# the default password service will use SHA-256 and 500000 iterations by defaul
# passwords were calculated by the shiro command line tool  shiro-tools-hasher-1.2.0-cli.jar , (that uses SHA-256 and 500000 iterations by default)
passwordService = org.apache.shiro.authc.credential.DefaultPasswordService
passwordMatcher.passwordService = $passwordService
jdbcRealm.credentialsMatcher = $passwordMatcher

ds = ${jdbc.ds}
ds.serverName = ${jdbc.serverName}
ds.portNumber = ${jdbc.portNumber}
ds.user = ${jdbc.user}
ds.password = ${jdbc.passwd}
ds.databaseName = ${jdbc.databaseName}
jdbcRealm.dataSource = $ds

authc.loginUrl = /login.jsp
authc.usernameParam = usernameTxb
authc.passwordParam = passwordTxb
authc.rememberMeParam = rememberMe
authc.failureKeyAttribute = shiroLoginFailure

logout.redirectUrl = /index.jsp?status=loggedOut

[users]
[roles]
[urls]
/index.jsp = anon
/login.jsp = authc
/logout = logout
# a vsp user should also have roles wsie and user
# a wsie user may also have role user (?)
/roleVSP/** = authc, roles[vsp]
/roleWSIE/** = authc, roles[wsie,vsp]
/roleEndUser/** = authc, roles[user,vsp,wsie]
/** = anon