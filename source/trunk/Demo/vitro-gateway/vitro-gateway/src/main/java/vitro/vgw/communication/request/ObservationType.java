/*******************************************************************************
 * Copyright (c) 2013 VITRO FP7 Consortium.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the GNU Lesser Public License v3.0 which accompanies this distribution, and is available at
 * http://www.gnu.org/licenses/lgpl-3.0.html
 * 
 * Contributors:
 *     Antoniou Thanasis
 *     Paolo Medagliani
 *     D. Davide Lamanna
 *     Panos Trakadas
 *     Andrea Kropp
 *     Kiriakos Georgouleas
 *     Panagiotis Karkazis
 *     David Ferrer Figueroa
 *     Francesco Ficarola
 *     Stefano Puglia
 ******************************************************************************/
//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.04.11 at 10:57:28 AM CEST 
//


package vitro.vgw.communication.request;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for observation-type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="observation-type">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="temperature"/>
 *     &lt;enumeration value="humidity"/>
 *     &lt;enumeration value="pressure"/>
 *     &lt;enumeration value="windspeed"/>
 *     &lt;enumeration value="co"/>
 *     &lt;enumeration value="co2"/>
 *     &lt;enumeration value="barometricpressure"/>
 *     &lt;enumeration value="light"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "observation-type")
@XmlEnum
public enum ObservationType {

    @XmlEnumValue("temperature")
    TEMPERATURE("temperature"),
    @XmlEnumValue("humidity")
    HUMIDITY("humidity"),
    @XmlEnumValue("pressure")
    PRESSURE("pressure"),
    @XmlEnumValue("windspeed")
    WINDSPEED("windspeed"),
    @XmlEnumValue("co")
    CO("co"),
    @XmlEnumValue("co2")
    CO_2("co2"),
    @XmlEnumValue("barometricpressure")
    BAROMETRICPRESSURE("barometricpressure"),
    @XmlEnumValue("light")
    LIGHT("light");
    private final String value;

    ObservationType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ObservationType fromValue(String v) {
        for (ObservationType c: ObservationType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
